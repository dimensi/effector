{
  "docs": {
    "Introduction": [
      "introduction/installation",
      "introduction/core-concepts",
      "introduction/prior-art"
    ],
    "API": [
      {
        "type": "subcategory",
        "label": "effector",
        "ids": [
          "api/effector/effector",
          "api/effector/event",
          "api/effector/store",
          "api/effector/effect",
          "api/effector/domain",
          "api/effector/createStore",
          "api/effector/createEvent",
          "api/effector/createEffect",
          "api/effector/createDomain",
          "api/effector/createStoreObject",
          "api/effector/combine",
          "api/effector/restore",
          "api/effector/createApi",
          "api/effector/clearNode",
          "api/effector/merge",
          "api/effector/split",
          "api/effector/sample",
          "api/effector/guard",
          "api/effector/forward",
          "api/effector/fromObservable"
        ]
      },
      {
        "type": "subcategory",
        "label": "effector-react",
        "ids": [
          "api/effector-react/effector-react",
          "api/effector-react/useStore",
          "api/effector-react/useStoreMap",
          "api/effector-react/useList",
          "api/effector-react/createComponent",
          "api/effector-react/gate",
          "api/effector-react/createGate",
          "api/effector-react/useGate",
          "api/effector-react/createStoreConsumer"
        ]
      },
      {
        "type": "subcategory",
        "label": "effector-vue",
        "ids": [
          "api/effector-vue/effector-vue",
          "api/effector-vue/vue-effector",
          "api/effector-vue/component-options",
          "api/effector-vue/vue"
        ]
      }
    ],
    "Recipes": [
      "recipes/recipes",
      "recipes/usage-with-typescript",
      {
        "type": "subcategory",
        "label": "Migrating to Effector",
        "ids": ["recipes/migrating-to-effector/from-redux"]
      },
      {
        "type": "subcategory",
        "label": "React",
        "ids": [
          "recipes/react/example",
          "recipes/react/example-effects",
          "recipes/react/example-forms",
          "recipes/react/todo-creator",
          "recipes/react/dynamic-form-schema"
        ]
      },
      {
        "type": "subcategory",
        "label": "React Native",
        "ids": [
          "recipes/react-native/example"
        ]
      }
    ],
    "Other": ["troubleshooting", "glossary"],
    "FAQ": ["faq"]
  },
  "api": {
    "effector": [
      "api/effector/effector",
      "api/effector/event",
      "api/effector/store",
      "api/effector/effect",
      "api/effector/domain",
      "api/effector/createStore",
      "api/effector/createEvent",
      "api/effector/createEffect",
      "api/effector/createDomain",
      "api/effector/createStoreObject",
      "api/effector/combine",
      "api/effector/restore",
      "api/effector/createApi",
      "api/effector/clearNode",
      "api/effector/merge",
      "api/effector/split",
      "api/effector/sample",
      "api/effector/guard",
      "api/effector/forward",
      "api/effector/fromObservable"
    ],
    "effector-react": [
      "api/effector-react/effector-react",
      "api/effector-react/useStore",
      "api/effector-react/useStoreMap",
      "api/effector-react/useList",
      "api/effector-react/createComponent",
      "api/effector-react/gate",
      "api/effector-react/createGate",
      "api/effector-react/useGate",
      "api/effector-react/createStoreConsumer"
    ],
    "effector-vue": [
      "api/effector-vue/effector-vue",
      "api/effector-vue/vue-effector",
      "api/effector-vue/component-options",
      "api/effector-vue/vue"
    ]
  }
}
